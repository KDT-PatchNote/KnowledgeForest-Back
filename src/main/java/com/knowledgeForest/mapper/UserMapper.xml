<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">

	<!-- 사용자 정보 조회 -->
	<select id="getUserInfo" parameterType="int"
		resultType="UserDTO">
		SELECT USER_NUM, USER_ID, USER_PW, USER_NICK,
		USER_BIRTH,USER_PH,USER_NAME, USER_JOIN_DATE FROM TBL_USER WHERE
		USER_NUM =
		#{userNum}
	</select>

	<!-- 닉네임 중복 확인 -->
	<select id="checkNickname" resultType="int">
		SELECT CASE WHEN (SELECT
		COUNT(1) FROM TBL_USER WHERE USER_NICK = #{userNick}) > 0 THEN 1 ELSE
		0 END FROM DUAL
	</select>

	<!-- 사용자 정보 업데이트 -->
	<update id="updateUser" parameterType="UserDTO">
		UPDATE TBL_USER SET
		USER_NICK = #{userNick}, USER_PW = #{userPw} WHERE
		USER_ID = #{userId}
	</update>

	<!-- 해당 유저 데이터 탈퇴 -->
	<delete id="deleteUser" parameterType="int">
		DELETE FROM TBL_USER WHERE
		USER_NUM = #{userNum}
	</delete>

	<!-- 작성한 자유게시판 글 -->
	<select id="getBoardList" resultType="BoardUserDTO"
		parameterType="int">

		SELECT *
		FROM (
		SELECT ROWNUM AS rnum, boardList.*
		FROM (
		SELECT
		BOARD_NUM,
		tu.USER_NUM,
		BOARD_TITLE,
		BOARD_CONTENTS,
		BOARD_UPLOAD_DATE,
		BOARD_EDIT_DATE,
		tu.USER_NICK
		FROM TBL_BOARD tb
		INNER JOIN TBL_USER tu
		ON
		tb.USER_NUM = tu.USER_NUM
		WHERE tb.USER_NUM = #{userNum}
		ORDER BY
		BOARD_NUM DESC
		) boardList

		WHERE ROWNUM <![CDATA[<=]]>
		#{endRow}
		)
		WHERE rnum >= #{startRow}

	</select>

	<!-- 게시글 총 개수 -->
	<select id="getBoardTotal" parameterType="int" resultType="int">
		SELECT COUNT(BOARD_NUM)
		FROM TBL_BOARD
		where USER_NUM = #{userNum}
	</select>


	<!-- 만든 스터디 목록 -->
	<select id="getMyStudies" resultType="StudyUserDTO">
		SELECT *
		FROM (
		SELECT ROWNUM AS rnum, studyList.*
		FROM (
		SELECT
		ts.STUDY_NUM,
		tu.USER_NUM,
		ts.STUDY_TITLE,
		ts.STUDY_DESCRIPT,
		ts.STUDY_LOCATION,
		ts.STUDY_START_DAY,
		ts.STUDY_END_DAY,
		ts.STUDY_START_TIME,
		ts.STUDY_END_TIME,
		ts.STUDY_LIMIT,
		ts.STUDY_DEADLINE,
		ts.STUDY_SHOWPH,
		ts.STUDY_CATEGORY,
		ts.STUDY_UPLOAD_DATE,
		ts.STUDY_EDIT_DATE,
		tu.USER_ID,
		tu.USER_NICK,
		tu.USER_PH,
		(SELECT COUNT(*) FROM TBL_STUDY_APPLY tsa WHERE
		tsa.STUDY_NUM = ts.STUDY_NUM and tsa.STUDY_APPLY_STATUS = 1)
		AS participants
		FROM TBL_STUDY ts
		INNER
		JOIN TBL_USER tu
		ON ts.USER_NUM = tu.USER_NUM
		WHERE ts.user_num =
		#{userNum}
		ORDER BY STUDY_NUM DESC
		) studyList
		WHERE ROWNUM <![CDATA[<=]]>
		#{endRow}
		)
		WHERE rnum >= #{startRow}
	</select>


	<!-- 만든 스터디 총 개수 -->
	<select id="getMyStudyTotal" parameterType="int"
		resultType="int">
		SELECT COUNT(STUDY_NUM)
		FROM TBL_STUDY
		where USER_NUM =
		#{userNum}
	</select>



	<!-- 신청한 스터디 게시판 글 -->
	<select id="getStudyList" resultType="StudyApplyDTO" parameterType="StudyUserDTO">
		SELECT *
		FROM (
		SELECT
		ta.STUDY_APPLY_NUM, ta.STUDY_NUM, ta.USER_NUM, ta.study_apply_date, -- TBL_STUDY_APPLY 열들
		st.STUDY_TITLE, st.STUDY_DESCRIPT, st.STUDY_LOCATION,
		st.STUDY_START_DAY, st.STUDY_END_DAY, -- TBL_STUDY 열들
		u.USER_ID, u.USER_NICK, u.USER_PH, -- TBL_USER 열들
		ROWNUM AS rnum
		FROM TBL_STUDY_APPLY ta
		JOIN TBL_STUDY st ON ta.STUDY_NUM = st.STUDY_NUM
		JOIN TBL_USER u ON ta.USER_NUM = u.USER_NUM
		WHERE ta.USER_NUM = #{userNum}
		ORDER BY ta.STUDY_NUM DESC
		)
		WHERE rnum <![CDATA[>=]]>
		#{startRow} AND rnum <![CDATA[<=]]>
		#{endRow}
	</select>

	<!-- 신청한 스터디 게시판 글 총 개수 -->
	<select id="getStudyListTotal" parameterType="int"
		resultType="int">
		SELECT COUNT(STUDY_APPLY_NUM)
		FROM TBL_STUDY_APPLY
		where
		USER_NUM = #{userNum}
	</select>

	<!-- 찜한 목록 리스트 -->
	<select id="getLikeList" resultType="StudyDTO"
		parameterType="int">
		SELECT * FROM TBL_LIKE tl JOIN TBL_STUDY ts ON
		ts.STUDY_NUM = tl.STUDY_NUM WHERE tl.USER_NUM = #{studyNum}
	</select>

	<!-- 신청 스터디 취소 -->
	<delete id="deleteStudyApply" parameterType="int">
		DELETE FROM
		TBL_STUDY_APPLY WHERE
		STUDY_NUM = #{studyNum}
	</delete>

	<!-- 신청자 목록 조회 -->
	<select id="getApplicants" parameterType="int"
		resultType="StudyApplyUserDTO">
		SELECT
		tsa.study_apply_num,
		tsa.study_num,
		tsa.user_num,
		tu.user_nick,
		tsa.user_determination,
		tsa.study_apply_status,
		tsa.study_apply_date
		FROM
		tbl_study_apply tsa
		JOIN
		tbl_user tu ON
		tsa.user_num = tu.user_num
		WHERE
		tsa.study_num = #{studyNum} AND
		tsa.STUDY_APPLY_STATUS = 0
	</select>


	<!-- 신청자 수락 -->
	<update id="acceptApplicant" parameterType="int">
		UPDATE
		tbl_study_apply
		SET study_apply_status = 1
		WHERE study_apply_num =
		#{studyApplyNum}
	</update>

	<!-- 신청자 거절 -->
	<update id="rejectApplicant" parameterType="int">
		UPDATE
		tbl_study_apply
		SET study_apply_status = 2
		WHERE study_apply_num =
		#{studyApplyNum}
	</update>



</mapper>