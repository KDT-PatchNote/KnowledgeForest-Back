<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AdminMapper">
	<!-- 관리자 메인 -->
	<!-- 신규 유저 최대 5명 -->
	<select id="selectUserFive" resultType="UserDTO">
		SELECT USER_NUM, USER_ID, USER_NICK, USER_JOIN_DATE
		FROM TBL_USER
        WHERE USER_NUM > 10
		ORDER BY USER_NUM DESC
		OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY
	</select>
	
	<!-- 최신 스터디 최대 5개 -->
	<select id="selectStudyFive" resultType="StudyUserDTO">
		SELECT STUDY_NUM, STUDY_TITLE, tu.USER_NICK, STUDY_UPLOAD_DATE
		FROM TBL_STUDY ts
		INNER JOIN TBL_USER tu 
		ON ts.USER_NUM = tu.USER_NUM 
		ORDER BY STUDY_NUM DESC
		OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY
	</select>
	
	<!-- 최신 자유게시판 최대 5개 -->
	<select id="selectBoardFive" resultType="BoardUserDTO">
		SELECT BOARD_NUM, BOARD_TITLE, tu.USER_NICK, BOARD_UPLOAD_DATE
		FROM TBL_BOARD tb
		INNER JOIN TBL_USER tu 
		ON tb.USER_NUM = tu.USER_NUM 
		ORDER BY BOARD_NUM DESC
		OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY
	</select>
	
	<!-- 최신 공지 최대 5개 -->
	<select id="selectNoticeFive" resultType="NoticeDTO">
		SELECT NOTICE_NUM, NOTICE_TITLE, NOTICE_UPLOAD_DATE 
		FROM TBL_NOTICE
		ORDER BY NOTICE_NUM DESC
		OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY
	</select>
	
	<!-- ==================================================================== -->
    <!-- parameterType 생략 가능 -->

    <!-- 모든 사용자 중 검색 -->
    <select id="selectUserAll" resultType="UserDTO">
        SELECT *
        FROM (
	        SELECT ROWNUM AS rnum, userList.*
	        FROM (
		        SELECT
					USER_NUM,
					USER_ID,
					USER_PW,
					USER_NICK,
					USER_BIRTH,
					USER_PH,
					USER_NAME,
					USER_JOIN_DATE
		        FROM TBL_USER
		        WHERE USER_NUM > 10
			    <if test = "keyword != null and keyword != ''">
			    	AND (USER_ID LIKE '%' || #{keyword} || '%' 
                    OR USER_NICK LIKE '%' || #{keyword} || '%')
			    </if>
		        ORDER BY USER_NUM
 	        ) userList
	        
			WHERE ROWNUM <![CDATA[<=]]> #{endRow}
		)
		WHERE rnum >= #{startRow}
    </select>
    
    <!-- 총 사용자 수 -->
	<select id="getUserTotal" resultType="int">
        SELECT COUNT(USER_NUM) 
        FROM TBL_USER
		WHERE USER_NUM > 10
		<if test = "keyword != null and keyword != ''">
			AND (USER_ID LIKE '%' || #{keyword} || '%' 
	            OR USER_NICK LIKE '%' || #{keyword} || '%')
		</if>
	</select>

    <!-- 해당 사용자 정보 조회 -->
    <select id="selectUserOne" resultType="UserDTO" parameterType="int">
    	SELECT USER_NUM, USER_ID, USER_PW, USER_NICK, USER_BIRTH, USER_PH, USER_NAME, USER_JOIN_DATE
        FROM TBL_USER
        WHERE USER_NUM = #{userNum}
    </select>
    
    <!-- 해당 사용자의 생성한 스터디 개수 -->
	<select id="countStudy" resultType="int" parameterType="int">
		SELECT COUNT(USER_NUM)
		FROM TBL_STUDY
		WHERE USER_NUM = #{userNum}
	</select>
	
    <!-- 해당 사용자의 신청한 스터디 개수 -->
	<select id="countApply" resultType="int" parameterType="int">
		SELECT COUNT(USER_NUM)
		FROM TBL_STUDY_APPLY
		WHERE USER_NUM = #{userNum}
	</select>
	
    <!-- 해당 사용자의 작성한 스터디 댓글 개수 -->
	<select id="countStudyComment" resultType="int" parameterType="int">
		SELECT COUNT(USER_NUM)
		FROM TBL_STUDY_COMMENT
		WHERE USER_NUM = #{userNum}
	</select>
	
    <!-- 해당 사용자의 작성한 게시판 글 개수 -->
	<select id="countBoard" resultType="int" parameterType="int">
		SELECT COUNT(USER_NUM)
		FROM TBL_BOARD
		WHERE USER_NUM = #{userNum}
	</select>
	
    <!-- 해당 사용자의 작성한 게시판 댓글 개수 -->
	<select id="countBoardComment" resultType="int" parameterType="int">
		SELECT COUNT(USER_NUM)
		FROM TBL_FB_COMMENT
		WHERE USER_NUM = #{userNum}
	</select>
	
	<!-- 해당 유저 데이터 삭제(탈퇴) -->
	<delete id="deleteUser" parameterType="int">
		DELETE FROM TBL_USER
		WHERE USER_NUM = #{userNum}
	</delete>
	
	<!-- ==================================================================== -->
	
    <!-- 스터디 목록 조회 -->
    <select id="selectStudyAll" resultType="StudyUserDTO">
    	SELECT *
        FROM (
	        SELECT ROWNUM AS rnum, studyList.*
	        FROM (
		        SELECT
					ts.STUDY_NUM,
					tu.USER_NUM,
					ts.STUDY_TITLE,
					ts.STUDY_DESCRIPT,
					ts.STUDY_LOCATION,
					ts.STUDY_START_DAY,
					ts.STUDY_END_DAY,
					ts.STUDY_START_TIME,
					ts.STUDY_END_TIME,
					ts.STUDY_LIMIT,
					ts.STUDY_DEADLINE,
					ts.STUDY_SHOWPH,
					ts.STUDY_CATEGORY,
					ts.STUDY_UPLOAD_DATE,
					ts.STUDY_EDIT_DATE,
					tu.USER_ID,
					tu.USER_NICK,
					tu.USER_PH,
				(SELECT COUNT(*)
				 FROM TBL_STUDY_APPLY tsa
				 WHERE tsa.STUDY_NUM = ts.STUDY_NUM AND tsa.STUDY_APPLY_STATUS = 1) AS participants
				FROM TBL_STUDY ts
				INNER JOIN TBL_USER tu
				ON ts.USER_NUM = tu.USER_NUM
				ORDER BY STUDY_NUM DESC
			) studyList
	        
			WHERE ROWNUM <![CDATA[<=]]> #{endRow}
		)
		WHERE rnum >= #{startRow}
		<if test = "keyword != null and keyword != ''">
			AND (STUDY_TITLE LIKE '%' || #{keyword} || '%' 
	            OR STUDY_DESCRIPT LIKE '%' || #{keyword} || '%')
		</if>
		ORDER BY STUDY_NUM DESC
    </select>
    
    <!-- 총 스터디 글 수 -->
	<select id="getStudyTotal" resultType="int">
        SELECT COUNT(STUDY_NUM) 
        FROM TBL_STUDY
		<if test = "keyword != null and keyword != ''">
			WHERE STUDY_TITLE LIKE '%' || #{keyword} || '%' 
	            OR STUDY_DESCRIPT LIKE '%' || #{keyword} || '%'
		</if>
	</select>

	<!-- 해당 스터디 데이터 삭제 -->
	<delete id="deleteStudy" parameterType="int">
		DELETE FROM TBL_STUDY
		WHERE STUDY_NUM = #{studyNum}
	</delete>
	
	<!-- ==================================================================== -->

	<!-- 스터디 댓글 목록 조회 -->
	<select id="selectStudyReplyAll" resultType="StudyCommentDTO">
    	SELECT *
        FROM (
	        SELECT ROWNUM AS rnum, studyCommentList.*
	        FROM (
		        SELECT
					tsc.STUDY_COMMENT_NUM,
					tsc.STUDY_NUM,
					tu.USER_NUM,
					tu.USER_ID,
					tu.USER_NICK,
					tsc.STUDY_COMMENT,
					tsc.STUDY_COMMENT_UPLOAD_DATE,
					tsc.STUDY_COMMENT_EDIT_DATE
				FROM TBL_STUDY_COMMENT tsc
				INNER JOIN TBL_USER tu
				ON tsc.USER_NUM = tu.USER_NUM
				<if test = "keyword != null and keyword != ''">
					AND (tu.USER_ID LIKE '%' || #{keyword} || '%' 
						OR tu.USER_NICK LIKE '%' || #{keyword} || '%' 
					    OR STUDY_COMMENT LIKE '%' || #{keyword} || '%')
				</if>
				ORDER BY STUDY_COMMENT_NUM DESC
			) studyCommentList
			WHERE ROWNUM <![CDATA[<=]]> #{endRow}
		)
		WHERE rnum >= #{startRow}
    </select>

    <!-- 총 스터디 댓글 수 -->
	<select id="getStudyReplyTotal" resultType="int">
        SELECT COUNT(STUDY_COMMENT_NUM) 
        FROM TBL_STUDY_COMMENT tsu
		JOIN TBL_USER tu
		ON tsu.USER_NUM = tu.USER_NUM
		<if test = "keyword != null and keyword != ''">
			WHERE tu.USER_ID LIKE '%' || #{keyword} || '%' 
				OR tu.USER_NICK LIKE '%' || #{keyword} || '%' 
			    OR STUDY_COMMENT LIKE '%' || #{keyword} || '%'
		</if>
	</select>
	
	<!-- 스터디 댓글 삭제 -->
	<delete id="deleteStudyReply" parameterType="int">
		DELETE FROM TBL_STUDY_COMMENT
		WHERE STUDY_COMMENT_NUM = #{studyCommentNum}
	</delete>
	
	<!-- ==================================================================== -->
	
	<!-- 스터디 신청 목록 -->
	<select id="selectStudyApplyAll" resultType="StudyApplyUserDTO">
        SELECT *
        FROM (
	        SELECT ROWNUM AS rnum, studyApplyList.*
	        FROM (
				SELECT
					tsa.STUDY_APPLY_NUM,
					tsa.STUDY_NUM, tu.USER_NUM,
					tsa.STUDY_APPLY_STATUS,
					tu.USER_ID,
					tu.USER_NICK,
					(SELECT COUNT(tsa2.STUDY_APPLY_NUM)
					 FROM TBL_STUDY_APPLY tsa2
					 WHERE tsa.STUDY_NUM = tsa2.STUDY_NUM AND tsa2.STUDY_APPLY_STATUS = 1) AS participants,
					(SELECT ts.STUDY_LIMIT
					 FROM TBL_STUDY ts
					 WHERE ts.STUDY_NUM = tsa.STUDY_NUM) AS limitParticipants,
					(SELECT ts2.STUDY_DEADLINE
					 FROM TBL_STUDY ts2
					 WHERE ts2.STUDY_NUM = tsa.STUDY_NUM) AS deadline
				FROM TBL_STUDY_APPLY tsa
				INNER JOIN TBL_USER tu
				ON tsa.USER_NUM = tu.USER_NUM
			    <if test = "keyword != null and keyword != ''">
			    	WHERE tu.USER_ID LIKE '%' || #{keyword} || '%' 
                    OR tu.USER_NICK LIKE '%' || #{keyword} || '%'
			    </if>
				ORDER BY STUDY_APPLY_NUM DESC
 	        ) studyApplyList
			WHERE ROWNUM <![CDATA[<=]]> #{endRow}
		)
		WHERE rnum >= #{startRow}
	</select>
    
    <!-- 총 스터디 신청 개수 -->
	<select id="getStudyApplyTotal" resultType="int">
        SELECT COUNT(STUDY_APPLY_NUM) 
        FROM TBL_STUDY_APPLY tsa
		INNER JOIN TBL_USER tu
		ON tsa.USER_NUM = tu.USER_NUM
		<if test = "keyword != null and keyword != ''">
			AND (tu.USER_ID LIKE '%' || #{keyword} || '%' 
	            OR tu.USER_NICK LIKE '%' || #{keyword} || '%')
		</if>
	</select>
	
	<!-- 스터디 신청 취소 -->
	<delete id="deleteStudyApply" parameterType="int">
		DELETE FROM TBL_STUDY_APPLY
		WHERE STUDY_APPLY_NUM= #{applyNum}
	</delete>
	
	<!-- 스터디 신청 상세 조회 -->
	<select id="selectStudyApplyOne" parameterType="int" resultType="StudyApplyDTO">
		SELECT ts.STUDY_NUM, STUDY_TITLE, STUDY_LIMIT, STUDY_DEADLINE, STUDY_START_DAY, STUDY_END_DAY,
			STUDY_START_TIME, STUDY_END_TIME, STUDY_CATEGORY, tsa.STUDY_APPLY_NUM, tsa.STUDY_APPLY_DATE, tsa.STUDY_APPLY_STATUS, tsa.USER_DETERMINATION
		FROM TBL_STUDY ts
		INNER JOIN TBL_STUDY_APPLY tsa
		ON ts.STUDY_NUM = tsa.STUDY_NUM
		WHERE tsa.STUDY_APPLY_NUM = #{studyApplyNum}
	</select>
	
	<!-- ==================================================================== -->

	<!-- 자유게시판 목록 -->
	<select id="selectBoardAll" resultType="BoardUserDTO">
        SELECT *
        FROM (
	        SELECT ROWNUM AS rnum, boardList.*
	        FROM (
				SELECT
					BOARD_NUM,
					tu.USER_NUM,
					BOARD_TITLE,
					BOARD_CONTENTS,
					BOARD_UPLOAD_DATE,
					BOARD_EDIT_DATE,
					tu.USER_NICK 
				FROM TBL_BOARD tb
				INNER JOIN TBL_USER tu 
				ON tb.USER_NUM = tu.USER_NUM 
				<if test = "keyword != null and keyword != ''">
					WHERE tb.BOARD_TITLE LIKE '%' || #{keyword} || '%' 
			            OR tu.USER_NICK LIKE '%' || #{keyword} || '%'
				</if>
				ORDER BY BOARD_NUM DESC
 	        ) boardList
	        
			WHERE ROWNUM <![CDATA[<=]]> #{endRow}
		)
		WHERE rnum >= #{startRow}
	</select>
	
	<!-- 총 자유게시판 게시글 수 -->
	<select id="getBoardTotal" resultType="int">
        SELECT COUNT(tb.USER_NUM) 
        FROM TBL_BOARD tb
		<if test = "keyword != null and keyword != ''">
			INNER JOIN TBL_USER tu 
			ON tb.USER_NUM = tu.USER_NUM 
			WHERE tb.BOARD_TITLE LIKE '%' || #{keyword} || '%' 
	    		OR tu.USER_NICK LIKE '%' || #{keyword} || '%'
		</if>
	</select>
	
	<!-- 자유게시판 글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		DELETE FROM TBL_BOARD
		WHERE BOARD_NUM= #{boardNum}
	</delete>
	
	<!-- ==================================================================== -->
	
	<!-- 자유게시판 댓글 목록 조회 -->
	<select id="selectBoardReplyAll" resultType="BoardReplyListDTO">
		SELECT *
		FROM (
			SELECT ROWNUM AS rnum, boarReplyList.*
			FROM (
				SELECT
					FB_COMMENT_NUM,
					BOARD_NUM,
					u.USER_NUM,
					u.USER_ID,
					u.USER_NICK,
					FB_COMMENT_CONTENT,
					FB_COMMENT_UPLOAD_DATE,
					FB_COMMENT_EDIT_DATE
				FROM TBL_FB_COMMENT bc
				JOIN TBL_USER u
				ON bc.USER_NUM = u.USER_NUM
				<if test = "keyword != null and keyword != ''">
					WHERE u.USER_ID LIKE '%' || #{keyword} || '%' 
						OR u.USER_NICK LIKE '%' || #{keyword} || '%' 
			            OR FB_COMMENT_CONTENT LIKE '%' || #{keyword} || '%'
				</if>
				ORDER BY FB_COMMENT_NUM desc
			) boarReplyList
			WHERE ROWNUM <![CDATA[<=]]> #{endRow}
		)
		WHERE rnum >= #{startRow}
	</select>
    
    <!-- 총 자유게시판 댓글 수 -->
	<select id="getBoardReplyTotal" resultType="int">
        SELECT COUNT(FB_COMMENT_NUM)
		FROM TBL_FB_COMMENT bc
		JOIN TBL_USER u
		ON bc.USER_NUM = u.USER_NUM
		<if test = "keyword != null and keyword != ''">
			WHERE u.USER_ID LIKE '%' || #{keyword} || '%' 
				OR u.USER_NICK LIKE '%' || #{keyword} || '%' 
			    OR FB_COMMENT_CONTENT LIKE '%' || #{keyword} || '%'
		</if>
	</select>
	
	<!-- 자유게시판 댓글 삭제 -->
	<delete id="deleteBoardReply" parameterType="int">
		DELETE FROM TBL_FB_COMMENT
		WHERE FB_COMMENT_NUM = #{fbCommetnNum}
	</delete>
	
	<!-- ==================================================================== -->
	
    <!-- 공지 목록 조회 -->
    <select id="selectNoticeAll" resultType="NoticeDTO">
		SELECT *
		FROM (
			SELECT ROWNUM AS rnum, noticeList.*
			FROM (
				SELECT
					NOTICE_NUM,
					NOTICE_TITLE,
					NOTICE_CONTENTS,
					NOTICE_UPLOAD_DATE,
					NOTICE_EDIT_DATE
				FROM TBL_NOTICE
				<if test = "keyword != null and keyword != ''">
					WHERE NOTICE_TITLE LIKE '%' || #{keyword} || '%' 
			            OR NOTICE_CONTENTS LIKE '%' || #{keyword} || '%'
				</if>
				ORDER BY NOTICE_NUM DESC
			) noticeList
			WHERE ROWNUM <![CDATA[<=]]> #{endRow}
		)
		WHERE rnum >= #{startRow}
    </select>
    
    <!-- 총 공지 글 수 -->
	<select id="getNoticeTotal" resultType="int">
        SELECT COUNT(NOTICE_NUM) 
        FROM TBL_Notice
		<if test = "keyword != null and keyword != ''">
			WHERE NOTICE_TITLE LIKE '%' || #{keyword} || '%' 
		        OR NOTICE_CONTENTS LIKE '%' || #{keyword} || '%'
		</if>
	</select>

	<!-- 해당 공지 상세 조회 -->
	<select id="selectOneNotice" resultType="NoticeImgDTO" parameterType="int">
		SELECT
		n.NOTICE_NUM,
		n.NOTICE_TITLE,
		n.NOTICE_CONTENTS,
		n.NOTICE_UPLOAD_DATE,
		n.NOTICE_EDIT_DATE
		FROM TBL_NOTICE n
		WHERE n.NOTICE_NUM = #{noticeNum}
	</select>
	
	<!-- 해당 공지 데이터 삭제 -->
	<delete id="deleteNotice" parameterType="int">
		DELETE FROM TBL_NOTICE
		WHERE NOTICE_NUM = #{noticeNum}
	</delete>
	
	<!-- 공지 등록 -->
	<insert id="insertNotice" parameterType="NoticeDTO">
		INSERT INTO TBL_NOTICE (NOTICE_NUM, NOTICE_TITLE, NOTICE_CONTENTS)
		VALUES(SEQ_NOTICE.NEXTVAL, #{noticeTitle}, #{noticeContents})
	</insert>
	
	<!-- 가장 최근에 생성된 공지 번호값 조회 -->
	<select id="getCurrentNoticeNum" resultType="int">
		SELECT
		SEQ_NOTICE.CURRVAL FROM DUAL
	</select>
	
	<!-- 공지 수정 -->
	<update id="updateNotice" parameterType="NoticeDTO">
		UPDATE TBL_NOTICE
		SET NOTICE_TITLE=#{noticeTitle}, NOTICE_CONTENTS=#{noticeContents}, NOTICE_EDIT_DATE=SYSDATE 
		WHERE NOTICE_NUM=#{noticeNum}
	</update>
	
	<!-- ==================================================================== -->
	
    <!-- 배너 목록 조회 -->
    <select id="selectBannerAll" resultType="BannerDTO">
		SELECT *
		FROM (
			SELECT ROWNUM AS rnum, bannerList.*
			FROM (
				SELECT
					BANNER_NUM,
					BANNER_NAME,
					BANNER_UPLOAD_DATE,
					BANNER_EDIT_DATE
				FROM TBL_BANNER
				<if test = "keyword != null and keyword != ''">
					WHERE BANNER_NAME LIKE '%' || #{keyword} || '%' 
				</if>
				ORDER BY BANNER_NUM DESC
			) bannerList
			WHERE ROWNUM <![CDATA[<=]]> #{endRow}
		)
		WHERE rnum >= #{startRow}
    </select>
    
    <!-- 총 배너 글 수 -->
	<select id="getBannerTotal" resultType="int">
        SELECT COUNT(BANNER_NUM) 
        FROM TBL_BANNER
		<if test = "keyword != null and keyword != ''">
			WHERE BANNER_NAME LIKE '%' || #{keyword} || '%' 
		</if>
	</select>

	<!-- 해당 배너 상세 조회 -->
	<select id="selectOneBanner" resultType="BannerImgDTO" parameterType="int">
		SELECT
			BANNER_NUM,
			BANNER_NAME,
			BANNER_UPLOAD_DATE,
			BANNER_EDIT_DATE
		FROM TBL_BANNER
		WHERE BANNER_NUM = #{bannerNum}
	</select>
	
	<!-- 해당 배너 데이터 삭제 -->
	<delete id="deleteBanner" parameterType="int">
		DELETE FROM TBL_BANNER
		WHERE BANNER_NUM = #{bannerNum}
	</delete>
	
	<!-- 배너 등록 -->
	<insert id="insertBanner" parameterType="BannerDTO">
		INSERT INTO TBL_BANNER
		(BANNER_NUM, BANNER_NAME)
		VALUES(SEQ_BANNER.NEXTVAL, #{bannerName})
	</insert>
	
	<!-- 가장 최근에 생성된 배너 번호값 조회 -->
	<select id="getCurrentBannerNum" resultType="int">
		SELECT
		SEQ_BANNER.CURRVAL FROM DUAL
	</select>
	
	<!-- 배너 수정 -->
	<update id="updateBanner" parameterType="BannerDTO">
		UPDATE TBL_BANNER
		SET BANNER_NAME=#{bannerName}, BANNER_EDIT_DATE=SYSDATE 
		WHERE BANNER_NUM=#{bannerNum}
	</update>
	
</mapper>